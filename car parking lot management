from datetime import datetime
class Car:
    def __init__(self, license_plate):
        self.license_plate = license_plate
        self.car_id = id(self) 

    def __str__(self):
        return f"Car {self.license_plate} (ID: {self.car_id})"
from datetime import datetime

class Ticket:
    def __init__(self, car, rate_per_hour=10):
        self.car = car
        self.entry_time = datetime.now()
        self.exit_time = None
        self.rate_per_hour = rate_per_hour
        self.amount_due = 0

    def calculate_fare(self):
        self.exit_time = datetime.now() if self.exit_time is None else self.exit_time
        time_spent = self.exit_time - self.entry_time
        hours_spent = time_spent.total_seconds() / 3600  
        self.amount_due = round(hours_spent * self.rate_per_hour, 2)

    def close_ticket(self):
        self.calculate_fare()
        return self.amount_due

    def __str__(self):
        return f"Ticket for {self.car}, Entry: {self.entry_time}, Exit: {self.exit_time }"
class ParkingLot:
    def __init__(self, capacity):
        self.capacity = capacity
        self.available_spots = capacity
        self.parked_cars = {}  

    def park_car(self, car):
        if self.available_spots > 0:
            ticket = Ticket(car)
            self.parked_cars[car.car_id] = ticket
            self.available_spots -= 1
            print(f"{car} has been parked. Available spots: {self.available_spots}")
        else:
            print("Parking Lot is full. No available spots.")

    def exit_car(self, car_id):
        if car_id in self.parked_cars:
            ticket = self.parked_cars[car_id]
            fare = ticket.close_ticket()
            print(f"{ticket.car} is exiting. Fare: ${fare}")
            del self.parked_cars[car_id]
            self.available_spots += 1
        else:
            print("Car not found in the parking lot.")

    def __str__(self):
        return f"Parking Lot Status: {self.available_spots}/{self.capacity} spots available."

parking_lot = ParkingLot(10)

car1 = Car("TN43VB2456")
car2 = Car("TN46NB4587")
car3 = Car("TN42BN0875")
car4 = Car("TN01AB1234") 

parking_lot.park_car(car1)
parking_lot.park_car(car2)
print(parking_lot)

parking_lot.exit_car(car1.car_id)
parking_lot.exit_car(car2.car_id)
print(parking_lot)

parking_lot.park_car(car4)
print(parking_lot)


